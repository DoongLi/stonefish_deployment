<launch>
    <!-- Configurable arguments -->
    <arg name="robot_name" default="girona500"/>
    <arg name="enable_keyboard" default="true"/>
    <arg name="enable_joystick" default="false"/>
    <arg name="joystick_device" default="/dev/input/js0"/>
    <arg name="enable_gui" default="true"/>
    <arg name="enable_rviz" default="true"/>
    
    <!-- Namespace with robot name -->
    <group ns="$(arg robot_name)">
        <!-- Load configs -->
        <arg name="config_folder" value="$(find cola2_girona500)/sim_config"/>

        <!-- Common configs -->
        <rosparam command="load" ns="captain" file="$(arg config_folder)/captain.yaml"/>
        <rosparam command="load" ns="controller" file="$(arg config_folder)/controller.yaml"/>
        <rosparam command="load" ns="default_param_handler" file="$(arg config_folder)/default_param_handler.yaml"/>
        <rosparam command="load" ns="diagnostic_aggregator" file="$(arg config_folder)/diagnostic_aggregator.yaml"/>
        <rosparam command="load" ns="logitech_fx10_to_teleoperation" file="$(arg config_folder)/logitech_fx10_to_teleoperation.yaml"/>
        <rosparam command="load" ns="navigator" file="$(arg config_folder)/navigator.yaml"/>
        <rosparam command="load" ns="pilot" file="$(arg config_folder)/pilot.yaml"/>
        <rosparam command="load" ns="safe_depth_altitude" file="$(arg config_folder)/safe_depth_altitude.yaml"/>
        <rosparam command="load" ns="safety_supervisor" file="$(arg config_folder)/safety_supervisor.yaml"/>
        <rosparam command="load" ns="teleoperation" file="$(arg config_folder)/teleoperation.yaml"/>
        <rosparam command="load" ns="virtual_cage" file="$(arg config_folder)/virtual_cage.yaml"/>

        <!-- Simulation configs -->
        <rosparam command="load" ns="sim_internal_sensors" file="$(arg config_folder)/sim_internal_sensors.yaml"/>

        <!-- Safety nodes -->
        <node name="diagnostic_aggregator" pkg="diagnostic_aggregator" type="aggregator_node">
            <remap from="/diagnostics" to="/$(arg robot_name)/diagnostics"/>
            <remap from="/diagnostics_agg" to="/$(arg robot_name)/diagnostics_agg"/>
            <remap from="/diagnostics_toplevel_state" to="/$(arg robot_name)/diagnostics_toplevel_state"/>
        </node>
        <node name="safe_depth_altitude" pkg="cola2_safety" type="safe_depth_altitude_node" output="screen"/>
        <node name="safety_supervisor" pkg="cola2_safety" type="safety_supervisor_node" output="screen"/>
        <node name="safety_supervisor_checker" pkg="cola2_safety" type="safety_supervisor_checker_node" output="screen"/>
        <node name="virtual_cage" pkg="cola2_safety" type="virtual_cage_node" output="screen"/>
        <node name="watchdog_timer" pkg="cola2_safety" type="watchdog_timer_node" output="screen"/>

        <!-- Simulation nodes -->
        <node name="sim_internal_sensors" pkg="cola2_sim" type="sim_internal_sensors_node" output="screen"/>

        <!-- Navigation -->
        <node name="navigator" pkg="cola2_nav" type="navigator_node" output="screen"/>

        <!-- Control stack -->
        <node name="captain" pkg="cola2_control" type="captain_node" output="screen">
            <param name="vehicle_config_launch_mission_package" value="cola2_$(arg robot_name)"/>
        </node>
        <node name="controller" pkg="cola2_control" type="controller_node"/>
        <node name="pilot" pkg="cola2_control" type="pilot_node" output="screen"/>
        <node name="teleoperation" pkg="cola2_control" type="teleoperation_node.py" output="screen"/>
        <node name="test_thrusters" pkg="cola2_control" type="test_thrusters.py" output="screen"/>

        <!-- Log -->
        <node name="bag_recorder" pkg="cola2_log" type="bag_recorder_node.py" output="screen"/>
        <node name="computer_logger" pkg="cola2_log" type="computer_logger_node.py" respawn="true" output="screen"/>
        <node name="default_param_handler" pkg="cola2_log" type="default_param_handler_node.py" respawn="true" output="screen">
            <param name="config_folder" value="sim_config"/>
        </node>
        <node name="param_logger" pkg="cola2_log" type="param_logger_node.py" output="screen"/>
        
        <!-- Keyboard -->
        <group if="$(arg enable_keyboard)">
            <node name="keyboard" pkg="cola2_control" type="keyboard_node"/>
            <node name="keyboard_to_teleoperation" pkg="cola2_control" type="keyboard_to_teleoperation_node.py"/>
        </group>

        <!-- Joystick -->
        <group if="$(arg enable_joystick)">
            <node name="joystick" pkg="joy" type="joy_node">
                <param name="dev" value="$(arg joystick_device)"/>
                <param name="dev_ff" value=""/>
                <param name="deadzone" value="0.05"/>
            </node>
            <node name="logitech_fx10_to_teleoperation" pkg="cola2_control" type="logitech_fx10_to_teleoperation_node.py"/>
        </group>

        <!-- Throttle messages -->
        <node name="navigation_throttle" pkg="topic_tools" type="throttle" args="messages navigator/navigation 4.0"/>
        <node name="odometry_throttle" pkg="topic_tools" type="throttle" args="messages navigator/odometry 4.0"/>
        <node name="merged_world_waypoint_req_throttle" pkg="topic_tools" type="throttle" args="messages controller/merged_world_waypoint_req 2.0"/>
        <node name="merged_body_velocity_req_throttle" pkg="topic_tools" type="throttle" args="messages controller/merged_body_velocity_req 2.0"/>
        <node name="merged_body_force_req_throttle" pkg="topic_tools" type="throttle" args="messages controller/merged_body_force_req 2.0"/>
        <node name="thruster_setpoints_throttle" pkg="topic_tools" type="throttle" args="messages setpoints_selector/thruster_setpoints 4.0"/>

        <!-- GUI mission interface -->
        <include if="$(arg enable_gui)" file="$(find rosbridge_server)/launch/rosbridge_tcp.launch">
            <arg name="port" value="9091"/>
        </include>
        
        <!-- Load robot description -->
        <arg name="manipulator_name" default="eca_5emicro_manipulator"/>
        <arg name="xacro_file" default="$(find cola2_stonefish)/urdf/girona500_eca5emicro.urdf.xarco"/>
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(arg xacro_file)' robot_namespace:=$(arg robot_name) manipulator_namespace:=$(arg manipulator_name)"/>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
            <remap from="joint_states" to="$(arg manipulator_name)/joint_states"/>
        </node>

        <node name="fixed_joint5" pkg="rostopic" type="rostopic" args="pub -r 10 -s /girona500/eca_5emicro_manipulator/joint_states sensor_msgs/JointState 
            '{header: {seq: 0, stamp: now, frame_id: 'girona500'}, name: ['girona500/eca_5emicro_manipulator/joint5'], position: [0], velocity: [], effort: []}'"/>
    </group>

    <!-- Run Simulator -->
    <include file="$(find stonefish_ros)/launch/simulator.launch">
        <arg name="simulation_data" value="$(find cola2_stonefish)/data"/>
        <arg name="scenario_description" value="$(find cola2_stonefish)/scenarios/girona500_valve_turning.scn"/>
        <arg name="simulation_rate" value="300.0"/>
        <arg name="graphics_resolution" value="1200 800"/>
        <arg name="graphics_quality" value="high"/>
    </include>

    <!-- Stonefish/COLA2 message translator -->
    <node name="translator" pkg="cola2_stonefish" type="cola2_stonefish_node">
        <remap from="/translator/stonefish_dvl" to="/$(arg robot_name)/navigator/dvl_sim"/>
        <remap from="/translator/cola2_dvl" to="/$(arg robot_name)/navigator/dvl"/>
        <remap from="/translator/stonefish_thruster_setpoints" to="/$(arg robot_name)/controller/thruster_setpoints_sim"/>
        <remap from="/translator/cola2_thruster_setpoints" to="/$(arg robot_name)/controller/thruster_setpoints"/>
    </node>

    <!-- Run RVIZ -->
    <node name="world2ned" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 3.1415 world world_ned 100"/>
    <group if="$(arg enable_rviz)">
        <node pkg="rviz" type="rviz" name="rviz" args="-d $(find cola2_girona500)/scene/girona500.rviz"/>
    </group>
</launch>
